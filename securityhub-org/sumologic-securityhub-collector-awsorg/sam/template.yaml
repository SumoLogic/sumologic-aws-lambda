AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >
    This solution consists of a lambda function which which gets triggered by CloudWatch events with findings as payload which are then ingested to Sumo Logic

Globals:
    Function:
        Timeout: 300
Metadata:
  AWS::ServerlessRepo::Application:
    Author: Sumo Logic
    Description: This solution consists of a lambda function which which gets triggered by CloudWatch events with findings as payload which are then ingested to Sumo Logic via HTTP source.
    HomePageUrl: https://github.com/SumoLogic/sumologic-aws-lambda
    Labels:
    - sumologic
    - serverless
    - security
    - cloudwatchevents
    - securityhub
    Name: sumologic-securityhub-connector-aws-org
    LicenseUrl: ../LICENSE
    ReadmeUrl: ../README.md
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/SumoLogic/sumologic-aws-lambda/tree/master/securityhub-org/sumologic-securityhub-connector-aws-org
    SpdxLicenseId: Apache-2.0

Parameters:
  SumoEndpoint:
    Description: "SumoLogic Endpoint to post logs"
    Type: "String" 

Resources:

  SecurityHubCollectorAwsOrg:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: "Lambda functions should be deployed inside a VPC"  
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: securityhub_collector_org.lambda_handler
      Runtime: python3.7
      CodeUri: ../src/
      MemorySize: 128
      Timeout: 300
      ReservedConcurrentExecutions: 100
      Environment:
        Variables:
          SUMO_ENDPOINT: !Ref SumoEndpoint
      Events:
        CloudWatchEventTrigger:
            Type: CloudWatchEvent
            Properties:
              Pattern:
                source:
                  - aws.securityhub

Outputs:
    SecurityHubCollectorAwsOrg:
      Description: "SecurityHubCollectorAwsOrg Function ARN"
      Value: !GetAtt SecurityHubCollectorAwsOrg.Arn
